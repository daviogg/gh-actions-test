name: Deploy Firebase Function
on:
  push:
    branches:
      - main
  workflow_dispatch:
    # Only allow manual triggers for the release job
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        # Validate the input is either 'staging' or 'production'
        # by listing it as an option in the select control
        options: ['staging', 'production']
jobs:
  deploy_staging:
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: Install Firebase CLI
        run: npm install -g firebase-tools
        working-directory: functions
      - name: Install dependencies
        run: npm install
        working-directory: functions
      - name: Create env
        id: create-env
        run: |
          touch .env
          echo ENV_NAME=${{ secrets.ENV_NAME }} >> .env
          echo cat .env
        working-directory: functions
      - name: Deploy Firebase function to staging
        run: |
          npx firebase use ${{ secrets.PROJECT_ID }} --token ${{ secrets.FIREBASE_TOKEN }}
          npx firebase deploy --only functions --token ${{ secrets.FIREBASE_TOKEN }}
  deploy_production:
    needs: deploy_staging
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: Install Firebase CLI
        run: npm install -g firebase-tools
        working-directory: functions
      - name: Install dependencies
        run: npm install
        working-directory: functions
      - name: Create env
        id: create-env
        run: |
          touch .env
          echo ENV_NAME=${{ secrets.ENV_NAME }} >> .env
          echo cat .env
      - name: Deploy Firebase function to production
        run: |
          npx firebase use ${{ secrets.PROJECT_ID }} --token ${{ secrets.FIREBASE_TOKEN }}
          npx firebase deploy --only functions --token ${{ secrets.FIREBASE_TOKEN }}
